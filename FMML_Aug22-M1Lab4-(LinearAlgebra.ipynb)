{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/lakshmilikithabonthu/Fmml/blob/main/FMML_Aug22-M1Lab4-(LinearAlgebra.ipynb)\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "mU9LZjQxiQT2"
      },
      "source": [
        "# Transforming data using linear algebra\n",
        "\n",
        "FMML Module 1, Lab 4<br>\n",
        "Module Coordinator: Amit Pandey [amit.pandey@research.iiit.ac.in]\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KBe4ZA32UTbv"
      },
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from keras.datasets import mnist"
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7mqG-dafVpya"
      },
      "source": [
        "#@title\n",
        "\n",
        "from IPython.display import Latex as lt\n",
        "#Plotting functions \n",
        "#(You DON'T need to understand how these functions)\n",
        "\n",
        "# function to plot a grid \n",
        "def plotGrid(transform, unit, linestyle = ':', fig=None, ax=None):\n",
        "  lim1 = -100\n",
        "  lim2 = 100\n",
        "  def mat2xy(start, end):\n",
        "    if len(start.shape)==1:\n",
        "      start = np.expand_dims(start,0)\n",
        "      #print(start)\n",
        "      end = np.expand_dims(end,0)\n",
        "      #print(end)\n",
        "    #print(\"\\n\",len(start))\n",
        "    #print(\"\\n start is:\", start)\n",
        "    nan = np.ones(len(start))*np.nan\n",
        "    #print(\"\\n\",nan)\n",
        "\n",
        "    x = np.stack((start[:,0], end[:,0], nan)).T.reshape(-1)\n",
        "    #print(\"\\n x is:\",x)\n",
        "    y = np.stack((start[:,1], end[:,1], nan)).T.reshape(-1)\n",
        "    #print(\"\\n y is:\",y)\n",
        "    return x, y\n",
        "\n",
        "  def parallellines(axis, addend, lines, unit):\n",
        "    #print(\"addend:\",addend)\n",
        "    addend = np.repeat(np.expand_dims(addend,0), lines*2, 0) \n",
        "    #print(\"\\nnew addend:\", addend)\n",
        "    unit = np.expand_dims(np.arange(-lines, lines)*unit,1)\n",
        "    unit = unit-lines\n",
        "    addend = addend*unit\n",
        "    lines = np.expand_dims(axis,0) + addend\n",
        "    return np.concatenate((lines, lines*-1))\n",
        "\n",
        "  if fig is None:\n",
        "    fig, ax = plt.subplots(figsize=(10,10))\n",
        "  transform = transform.astype(np.float)\n",
        "  xaxis = transform[0]\n",
        "  #print(\"\\n x axis\", xaxis)\n",
        "  yaxis = transform[1]\n",
        "  #print(\"\\n y axis\", yaxis)\n",
        "    \n",
        "  # plot lines parallel to the x axis\n",
        "  lines1= parallellines(xaxis*lim1, yaxis, 100,unit )\n",
        "  lines2 = parallellines(xaxis*lim2, yaxis, 100,unit )\n",
        "  x,y = mat2xy(lines1, lines2)\n",
        "  plt.plot(x,y, linestyle+'k', linewidth=0.5)\n",
        "  # plot x axis\n",
        "  x,y = mat2xy(xaxis*lim1, xaxis*lim2)\n",
        "  plt.plot(x,y,linestyle, color = '#440077')\n",
        "\n",
        "  # plot  lines parallel to the y axis\n",
        "  lines1= parallellines(yaxis*lim1, xaxis, 100,unit)\n",
        "  lines2 = parallellines(yaxis*lim2, xaxis, 100,unit)\n",
        "  x,y = mat2xy(lines1, lines2)\n",
        "  plt.plot(x,y, linestyle+'k', linewidth=0.5)\n",
        "  # plot y axis\n",
        "  x,y = mat2xy(yaxis*lim1, yaxis*lim2)\n",
        "  plt.plot(x,y,linestyle, color= '#aa5500')\n",
        "\n",
        "  return fig, ax\n",
        "\n",
        "def plotData(X, y, xlabel = 'hole', ylabel = 'bound', fig=None, ax = None):\n",
        "\n",
        "  if fig is None:\n",
        "    fig, ax = plt.subplots()\n",
        "  for ii in range(nclasses):\n",
        "    plt.scatter(X[y==ii,0], X[y==ii, 1])\n",
        "  plt.legend([str(i) for i in range(nclasses)])\n",
        "  plt.xlabel(xlabel)\n",
        "  plt.ylabel(ylabel)\n",
        "  lim2 = X.max() \n",
        "  lim1 = X.min() \n",
        "  add = abs(lim1-lim2)/5\n",
        "  return fig, ax\n"
      ],
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9d5dmEXxaktp"
      },
      "source": [
        "# Matrix transformations on data\n",
        "\n",
        "A 2D coordinate system is defined by its basis vectors, i and j. In the standard coordinate system (Let us call it T0), the basis vectors are\n",
        "\n",
        "$$\\begin{equation}\n",
        "i = \\left\\{  \\begin{aligned}1 \\\\ 0 \\end{aligned} \\right\\} \n",
        "\\end{equation}$$\n",
        "and\n",
        "$$\\begin{equation} j = \\left\\{ \\begin{aligned} 0 \\\\ 1\\end{aligned} \\right\\} \\end{equation}$$\n",
        "\n",
        "We can use any two vectors as basis vectors for a new coordinate system as long as they are not colinear. To be a basis all that is required is linear independence and they must span the space. For example, let us call this new coordinate system T1:\n",
        "\n",
        "$$\\begin{equation}\n",
        "i = \\left\\{  \\begin{aligned}1 \\\\ -1 \\end{aligned} \\right\\} \n",
        "\\end{equation}$$\n",
        "and\n",
        "$$\\begin{equation} j = \\left\\{ \\begin{aligned} 0 \\\\ 2 \\end{aligned} \\right\\} \\end{equation}$$\n",
        "\n",
        "Suppose we have a point [a,b] in the T1 coordinate system. Its representation in the standard system T0 can be obtained by the following matrix multiplication:\n",
        "\n",
        "$$ \\begin{equation} \n",
        "\\left\\{  \\begin{aligned}a' \\\\ b' \\end{aligned} \\right\\} = \n",
        "\\left\\{  \\begin{aligned}&1 & 0 \\\\ -&1 & 2 \\end{aligned} \\right\\}\n",
        "\\left\\{  \\begin{aligned}a \\\\ b \\end{aligned} \\right\\}\n",
        "\\end{equation}$$\n",
        "where the columns of the matrix are the basis vectors of T1. \n",
        "\n",
        "Let us see this in action:\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "K8SCFKqfbM-l",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "517fe8d6-3265-4d54-f6b0-3ddbf6f53646"
      },
      "source": [
        "T0 = np.array([[1,0],[0,1]])\n",
        "T1 = np.array([[1,0], [-1,2]])\n",
        "\n",
        "data1 = np.array([5,4]) # the data in T1 coordinate system\n",
        "data0 = np.matmul(T1, data1) # the data in T0 coordinate system\n",
        "\n",
        "print('Data in T0 = ', data0)\n",
        "print('Data in T1 = ', data1)"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Data in T0 =  [5 3]\n",
            "Data in T1 =  [5 4]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kIfEWZ1RQeve"
      },
      "source": [
        "We can visualize this below. T0 is shown with dotted lines and T1 is shown with solid lines. "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "taCUcAMEpBlt"
      },
      "source": [
        "## EACH COLUMN OF T == BASIS MATRIX IS THE iTH AND jTH VECTOR (IMAGINE AS X AND Y AXIS EQUIVALENT OF NON STANDARD SYSTEM)\n",
        "\n",
        "## FOR STANDARD SYSTEM ==> iTH VECTOR == X AXIS == [1 0] AND jTH VECTOR == Y AXIS == [0 1]\n"
      ],
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 650
        },
        "id": "E0A2Bc36qHg0",
        "outputId": "4022d626-cda4-47b6-821e-f79ce3923591"
      },
      "source": [
        "fig, ax = plotGrid(T1.T, 1,'-') # custom plotting function, no need to understand this\n",
        "#plotGrid(T0.T, 1, fig=fig, ax=ax) # custom plotting function, no need to understand this\n",
        "plt.scatter(data0[0], data0[1])\n",
        "ax.set_xlim(-10,10)\n",
        "ax.set_ylim(-10,10)\n",
        "ax.set_xticks([]);\n",
        "ax.set_yticks([]);\n"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-2-0627cf1527fb>:40: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "  transform = transform.astype(np.float)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x720 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jSuTaeSDQoYK",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 650
        },
        "outputId": "3113d9f7-c3d4-45c1-9095-ee03617ca2cf"
      },
      "source": [
        "fig, ax = plotGrid(T1.T, 1,'-') # custom plotting function, no need to understand this\n",
        "plotGrid(T0.T, 1, fig=fig, ax=ax) # custom plotting function, no need to understand this\n",
        "plt.scatter(data0[0], data0[1])\n",
        "ax.set_xlim(-10,10)\n",
        "ax.set_ylim(-10,10)\n",
        "ax.set_xticks([]);\n",
        "ax.set_yticks([]);\n"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-2-0627cf1527fb>:40: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "  transform = transform.astype(np.float)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x720 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 650
        },
        "id": "uQ927lleopa5",
        "outputId": "210115f8-31d4-4caa-f7fa-09d04624d6ea"
      },
      "source": [
        "\n",
        "fig, ax = plotGrid(T0.T, 1,'-') # custom plotting function, no need to understand this\n",
        "plotGrid(T0.T, 1, fig=fig, ax=ax) # custom plotting function, no need to understand this\n",
        "plt.scatter(data0[0], data0[1])\n",
        "ax.set_xlim(-10,10)\n",
        "ax.set_ylim(-10,10)\n",
        "ax.set_xticks([]);\n",
        "ax.set_yticks([]);\n"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-2-0627cf1527fb>:40: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n",
            "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
            "  transform = transform.astype(np.float)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x720 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "nUb3oYWIgdya"
      },
      "source": [
        "Look at the coordinates of the blue dot. In T0 (dotted lines), the position is [5,3] where it is [5,4] in T1. Feel free to experiment with different data points and coordinate systems. \n",
        "\n",
        "Remember that we can achieve the same thing by post-multiplying the transpose of the transformation matrix to the data. This will come in handy when transforming multiple data points at once:"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SD4pqOMndf-4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "41dd919b-89a9-4215-a8db-cbd211050206"
      },
      "source": [
        "data0_a = np.matmul(T1, data1)\n",
        "data0_b = np.matmul(data1, T1.T)\n",
        "print(data0_a)\n",
        "print(data0_b)\n",
        "\n"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[5 3]\n",
            "[5 3]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Z-Kui3dSESPm"
      },
      "source": [
        "Why is transforming data useful? Data transformations cause the distance between data points to change. This will affect distance-based algorithms such as nearest neighbour"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nE0NbpYIC9ou",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d6b7005f-8d8d-470e-c107-43aa109fac7e"
      },
      "source": [
        "# let us define 3 points in T1\n",
        "A1 = np.array([3,3])\n",
        "B1 = np.array([2,-5])\n",
        "C1 = np.array([1,-1])\n",
        "\n",
        "# the corresponding points in T0:\n",
        "A0 = np.matmul(T1, A1)\n",
        "B0 = np.matmul(T1, B1)\n",
        "C0 = np.matmul(T1, C1)\n",
        "\n",
        "# function to calculate Euclidean distance:\n",
        "def dist(a, b):\n",
        "  diff = a-b\n",
        "  sq = diff*diff\n",
        "  return np.sqrt(sq.sum())\n",
        "\n",
        "# distance between the points in T1\n",
        "print('Distance between A and B in T1 = ', dist(A1, B1))\n",
        "print('Distance between B and C in T1 = ', dist(B1, C1))\n",
        "print('Distance between A and C in T1 = ', dist(A1, C1))\n",
        "\n",
        "print('')\n",
        "# distnace between the points in T0\n",
        "print('Distance between A and B in T0 = ', dist(A0, B0))\n",
        "print('Distance between B and C in T0 = ', dist(B0, C0))\n",
        "print('Distance between A and C in T0 = ', dist(A0, C0))"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Distance between A and B in T1 =  8.06225774829855\n",
            "Distance between B and C in T1 =  4.123105625617661\n",
            "Distance between A and C in T1 =  4.47213595499958\n",
            "\n",
            "Distance between A and B in T0 =  15.033296378372908\n",
            "Distance between B and C in T0 =  9.055385138137417\n",
            "Distance between A and C in T0 =  6.324555320336759\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YE95JMniUtDm"
      },
      "source": [
        "We see that in T1, B and C are the closest whereas in T0, A and C are the closest. These kinds of changes will affect the predictions returned by the nearest neighbour algorithm. "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PFbpTSBdV29C"
      },
      "source": [
        "# Transformations on MNIST\n",
        "\n",
        "Let us experiment with a subset of the MNIST dataset. We will extract two features from the database for our experiment. "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kMvUzC2GUawS"
      },
      "source": [
        "Functions for nearest neighbour, accuracy and feature extraction. (from previous labs)"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "22ayl0sViF5-"
      },
      "source": [
        "#@title\n",
        "\n",
        "def NN1(traindata, trainlabel, query):\n",
        "  diff  = traindata - query  # find the difference between features. Numpy automatically takes care of the size here \n",
        "  sq = diff*diff # square the differences\n",
        "  dist = sq.sum(1) # add up the squares\n",
        "  label = trainlabel[np.argmin(dist)] # our predicted label is the label of the training data which has the least distance from the query\n",
        "  return label\n",
        "\n",
        "def NN(traindata, trainlabel, testdata):\n",
        "  # we will run nearest neighbour for each sample in the test data \n",
        "  # and collect the predicted classes in an array using list comprehension\n",
        "  predlabel = np.array([NN1(traindata, trainlabel, i) for i in testdata])\n",
        "  return predlabel\n",
        "\n",
        "def Accuracy(gtlabel, predlabel):\n",
        "  assert len(gtlabel)==len(predlabel), \"Length of the groundtruth labels and predicted labels should be the same\"\n",
        "  correct = (gtlabel==predlabel).sum() # count the number of times the groundtruth label is equal to the predicted label.\n",
        "  return correct/len(gtlabel)\n",
        "\n",
        "def cumArray(img):\n",
        "  img2 = img.copy()\n",
        "  for ii in range(1, img2.shape[1]):\n",
        "    img2[ii,:] = img2[ii,:] + img2[ii-1,:]  # for every row, add up all the rows above it.\n",
        "  img2 = img2>0\n",
        "  return img2\n",
        "\n",
        "def getHolePixels(img):\n",
        "  im1 = cumArray(img)\n",
        "  im2 = np.rot90(cumArray(np.rot90(img)), 3) # rotate and cumulate it again for differnt direction\n",
        "  im3 = np.rot90(cumArray(np.rot90(img, 2)), 2)\n",
        "  im4 = np.rot90(cumArray(np.rot90(img, 3)), 1)\n",
        "  hull =  im1 & im2 & im3 & im4 # this will create a binary image with all the holes filled in.\n",
        "  hole = hull & ~ (img>0) # remove the original digit to leave behind the holes\n",
        "  return hole\n",
        "\n",
        "def getHullPixels(img):\n",
        "  im1 = cumArray(img)\n",
        "  im2 = np.rot90(cumArray(np.rot90(img)), 3) # rotate and cumulate it again for differnt direction\n",
        "  im3 = np.rot90(cumArray(np.rot90(img, 2)), 2)\n",
        "  im4 = np.rot90(cumArray(np.rot90(img, 3)), 1)\n",
        "  hull =  im1 & im2 & im3 & im4 # this will create a binary image with all the holes filled in.\n",
        "  return hull\n",
        "\n",
        "def minus(a, b):\n",
        "  return a & ~ b\n",
        "\n",
        "def getBoundaryPixels(img):\n",
        "  img = img.copy()>0  # binarize the image\n",
        "  rshift = np.roll(img, 1, 1)\n",
        "  lshift = np.roll(img, -1 ,1)\n",
        "  ushift = np.roll(img, -1, 0)\n",
        "  dshift = np.roll(img, 1, 0)\n",
        "  boundary = minus(img, rshift) | minus(img, lshift) | minus(img, ushift) | minus(img, dshift)\n",
        "  return boundary\n",
        "\n",
        "\n"
      ],
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RzF-9mGxUkWC"
      },
      "source": [
        "Get the MNIST dataset:"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rLioX9fTr6wF"
      },
      "source": [
        "def minus(a, b):\n",
        "  return a & ~ b\n",
        "\n",
        "def getBoundaryPixels(img):\n",
        "  img = img.copy()>0  # binarize the image\n",
        "  rshift = np.roll(img, 1, 1)\n",
        "  lshift = np.roll(img, -1 ,1)\n",
        "  ushift = np.roll(img, -1, 0)\n",
        "  dshift = np.roll(img, 1, 0)\n",
        "  boundary = minus(img, rshift) | minus(img, lshift) | minus(img, ushift) | minus(img, dshift)\n",
        "  return boundary\n",
        "\n",
        "def cumArray(img):\n",
        "  img2 = img.copy()\n",
        "  for ii in range(1, img2.shape[1]):\n",
        "    img2[ii,:] = img2[ii,:] + img2[ii-1,:]  # for every row, add up all the rows above it.\n",
        "  #print(img2)\n",
        "  img2 = img2>0\n",
        "  #print(img2)\n",
        "  return img2\n",
        "\n",
        "def getHolePixels(img):\n",
        "  im1 = cumArray(img)\n",
        "  im2 = np.rot90(cumArray(np.rot90(img)), 3) # rotate and cumulate it again for differnt direction\n",
        "  im3 = np.rot90(cumArray(np.rot90(img, 2)), 2)\n",
        "  im4 = np.rot90(cumArray(np.rot90(img, 3)), 1)\n",
        "  hull =  im1 & im2 & im3 & im4 # this will create a binary image with all the holes filled in.\n",
        "  hole = hull & ~ (img>0) # remove the original digit to leave behind the holes\n",
        "  return hole\n",
        "\n",
        "\n",
        "def getHullPixels(img):\n",
        "  im1 = cumArray(img)\n",
        "  im2 = np.rot90(cumArray(np.rot90(img)), 3) # rotate and cumulate it again for differnt direction\n",
        "  im3 = np.rot90(cumArray(np.rot90(img, 2)), 2)\n",
        "  im4 = np.rot90(cumArray(np.rot90(img, 3)), 1)\n",
        "  hull =  im1 & im2 & im3 & im4 # this will create a binary image with all the holes filled in.\n",
        "  return hull\n"
      ],
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bHz5BVmLUjzb",
        "outputId": "4faa505e-0ce1-446c-9094-715a29617b92",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        "#loading the dataset\n",
        "(train_X, train_y), (test_X, test_y) = mnist.load_data()\n",
        "train_X = train_X/255\n",
        "test_X = test_X/255\n",
        "\n",
        "nclasses = 4\n",
        "\n",
        "# get only for the first 4 classes\n",
        "train_X = train_X[train_y<nclasses]\n",
        "train_y = train_y[train_y<nclasses]\n",
        "test_X = test_X[test_y<nclasses]\n",
        "test_y = test_y[test_y<nclasses]\n",
        "\n",
        "train_X = train_X[::100].copy() # We are only taking a subset of the training set\n",
        "train_y = train_y[::100].copy() # do the same to the labels\n",
        "test_X = test_X[::100].copy() # taking a subset of the test set. This code takes every 500th sample\n",
        "test_y = test_y[::100].copy()\n",
        "\n",
        "# get all the features\n",
        "train_hole = np.array([getHolePixels(i).sum() for i in train_X])\n",
        "test_hole = np.array([getHolePixels(i).sum() for i in test_X])\n",
        "train_bound = np.array([getBoundaryPixels(i).sum() for i in train_X])\n",
        "test_bound = np.array([getBoundaryPixels(i).sum() for i in test_X])\n",
        "# train_hull = np.array([getHullPixels(i).sum() for i in train_X])\n",
        "# test_hull = np.array([getHullPixels(i).sum() for i in test_X])\n",
        "# train_sum = np.sum(train_X, (1,2))/(28*28)\n",
        "# test_sum = np.sum(test_X, (1,2))/(28*28)\n",
        "\n",
        "# create the train and test set by combining the appropriate features\n",
        "train_feats = np.vstack((train_hole,train_bound)).transpose()\n",
        "test_feats = np.vstack((test_hole, test_bound)).transpose()"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n",
            "11490434/11490434 [==============================] - 0s 0us/step\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "I7qGVrlnQCUy"
      },
      "source": [
        "Let us plot the samples and see what they look like:"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DnqAj7lprnZs",
        "outputId": "41ce2e3c-2610-42c0-ddf0-dc591f073787"
      },
      "source": [
        "train_feats.shape #248 samples and 2 is the number of features == holes and bound"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(248, 2)"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6RPqsTMFDNG8",
        "outputId": "1ddceee3-fa8e-4530-8873-58870bcb8b39"
      },
      "source": [
        "train_feats"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 72,  87],\n",
              "       [ 71,  84],\n",
              "       [ 66,  89],\n",
              "       [ 11,  69],\n",
              "       [ 20,  87],\n",
              "       [  0,  42],\n",
              "       [  9,  69],\n",
              "       [ 99,  93],\n",
              "       [ 10,  83],\n",
              "       [  0,  59],\n",
              "       [  0,  47],\n",
              "       [  0,  86],\n",
              "       [ 86,  86],\n",
              "       [ 37,  76],\n",
              "       [  4,  60],\n",
              "       [  6,  90],\n",
              "       [ 71,  84],\n",
              "       [121,  95],\n",
              "       [ 21,  84],\n",
              "       [ 18,  75],\n",
              "       [ 16,  89],\n",
              "       [  4,  57],\n",
              "       [  0,  70],\n",
              "       [101,  97],\n",
              "       [  0,  42],\n",
              "       [  0,  64],\n",
              "       [  0,  61],\n",
              "       [ 32,  93],\n",
              "       [  7,  71],\n",
              "       [  0,  48],\n",
              "       [  1,  59],\n",
              "       [  0,  43],\n",
              "       [  2,  67],\n",
              "       [ 46,  84],\n",
              "       [  0,  44],\n",
              "       [  0,  55],\n",
              "       [ 62,  88],\n",
              "       [  0,  95],\n",
              "       [ 17,  83],\n",
              "       [118,  91],\n",
              "       [  0,  80],\n",
              "       [ 72,  88],\n",
              "       [ 12,  84],\n",
              "       [  6,  84],\n",
              "       [  8,  76],\n",
              "       [ 78,  86],\n",
              "       [ 16,  73],\n",
              "       [ 80,  88],\n",
              "       [  0,  68],\n",
              "       [ 29,  76],\n",
              "       [  6,  77],\n",
              "       [  0,  66],\n",
              "       [ 76,  95],\n",
              "       [  0,  43],\n",
              "       [119,  92],\n",
              "       [ 13,  81],\n",
              "       [  0,  77],\n",
              "       [ 24,  82],\n",
              "       [  0,  47],\n",
              "       [ 26,  90],\n",
              "       [110,  97],\n",
              "       [ 32,  82],\n",
              "       [ 16,  88],\n",
              "       [ 73,  89],\n",
              "       [  3,  68],\n",
              "       [ 29, 114],\n",
              "       [ 13,  77],\n",
              "       [ 11,  85],\n",
              "       [ 15,  67],\n",
              "       [  0,  44],\n",
              "       [  0,  44],\n",
              "       [ 86,  85],\n",
              "       [  9,  74],\n",
              "       [  0,  48],\n",
              "       [  1,  47],\n",
              "       [  0,  57],\n",
              "       [  1,  65],\n",
              "       [128,  95],\n",
              "       [ 11,  78],\n",
              "       [ 68,  82],\n",
              "       [  0,  42],\n",
              "       [ 30,  83],\n",
              "       [  1,  46],\n",
              "       [  8,  96],\n",
              "       [  0,  55],\n",
              "       [  9,  66],\n",
              "       [  3,  79],\n",
              "       [ 15,  78],\n",
              "       [  0,  42],\n",
              "       [ 21,  75],\n",
              "       [  0,  49],\n",
              "       [ 14,  73],\n",
              "       [  0,  42],\n",
              "       [ 42,  93],\n",
              "       [ 75,  83],\n",
              "       [ 21,  82],\n",
              "       [  0,  43],\n",
              "       [  6,  77],\n",
              "       [ 91,  95],\n",
              "       [  0,  52],\n",
              "       [ 18,  88],\n",
              "       [ 14,  79],\n",
              "       [  3,  60],\n",
              "       [  4,  64],\n",
              "       [  0,  42],\n",
              "       [  0,  44],\n",
              "       [  2,  73],\n",
              "       [ 50,  73],\n",
              "       [  0,  45],\n",
              "       [  0,  44],\n",
              "       [ 86,  87],\n",
              "       [111,  98],\n",
              "       [ 30,  93],\n",
              "       [ 25,  70],\n",
              "       [  0,  84],\n",
              "       [  4,  73],\n",
              "       [159, 107],\n",
              "       [  0,  46],\n",
              "       [ 18,  79],\n",
              "       [ 17,  74],\n",
              "       [  0,  44],\n",
              "       [148, 101],\n",
              "       [ 30,  80],\n",
              "       [  3,  77],\n",
              "       [  0,  44],\n",
              "       [ 18,  74],\n",
              "       [ 42,  87],\n",
              "       [ 28,  91],\n",
              "       [ 17,  86],\n",
              "       [  0,  49],\n",
              "       [ 18,  80],\n",
              "       [  0,  42],\n",
              "       [ 14,  89],\n",
              "       [ 18,  86],\n",
              "       [ 26,  76],\n",
              "       [  0,  41],\n",
              "       [ 76,  82],\n",
              "       [ 10,  77],\n",
              "       [  0,  42],\n",
              "       [ 19,  94],\n",
              "       [ 18,  83],\n",
              "       [  3,  78],\n",
              "       [  9,  72],\n",
              "       [  0,  42],\n",
              "       [ 36,  92],\n",
              "       [  0,  43],\n",
              "       [  0,  46],\n",
              "       [  0,  43],\n",
              "       [ 70,  87],\n",
              "       [ 12,  65],\n",
              "       [104,  90],\n",
              "       [ 28,  85],\n",
              "       [  3,  70],\n",
              "       [ 15,  86],\n",
              "       [  0,  45],\n",
              "       [ 29,  86],\n",
              "       [  0,  50],\n",
              "       [ 44,  79],\n",
              "       [  0,  43],\n",
              "       [  0,  90],\n",
              "       [  0,  67],\n",
              "       [  0,  43],\n",
              "       [ 85,  95],\n",
              "       [  9,  70],\n",
              "       [  5,  87],\n",
              "       [ 24,  91],\n",
              "       [  0,  67],\n",
              "       [ 16,  82],\n",
              "       [  0,  66],\n",
              "       [ 13,  67],\n",
              "       [  0,  44],\n",
              "       [  4,  81],\n",
              "       [ 48,  91],\n",
              "       [  0,  46],\n",
              "       [  0,  70],\n",
              "       [  0,  73],\n",
              "       [ 20,  78],\n",
              "       [ 14,  92],\n",
              "       [ 39,  84],\n",
              "       [ 15,  73],\n",
              "       [ 23,  76],\n",
              "       [ 31,  81],\n",
              "       [ 68,  93],\n",
              "       [  4,  71],\n",
              "       [ 13,  65],\n",
              "       [  0,  42],\n",
              "       [  2,  68],\n",
              "       [ 11,  72],\n",
              "       [  0,  43],\n",
              "       [ 35,  78],\n",
              "       [ 21,  96],\n",
              "       [ 38,  96],\n",
              "       [  0,  43],\n",
              "       [  0,  40],\n",
              "       [ 50,  82],\n",
              "       [ 25,  82],\n",
              "       [  0,  45],\n",
              "       [  0,  40],\n",
              "       [  2,  67],\n",
              "       [ 65,  91],\n",
              "       [  0,  44],\n",
              "       [  3,  76],\n",
              "       [ 93, 104],\n",
              "       [ 32,  85],\n",
              "       [ 84,  94],\n",
              "       [ 43,  94],\n",
              "       [ 23,  82],\n",
              "       [ 84,  86],\n",
              "       [  7,  77],\n",
              "       [  8,  74],\n",
              "       [109,  88],\n",
              "       [  1,  75],\n",
              "       [ 76,  86],\n",
              "       [ 88,  92],\n",
              "       [ 73,  87],\n",
              "       [ 32,  95],\n",
              "       [ 37,  89],\n",
              "       [  3,  63],\n",
              "       [  7,  81],\n",
              "       [ 18,  80],\n",
              "       [ 32,  96],\n",
              "       [ 21,  86],\n",
              "       [  0,  43],\n",
              "       [  8,  85],\n",
              "       [  4,  67],\n",
              "       [101,  94],\n",
              "       [  6,  65],\n",
              "       [  0,  78],\n",
              "       [ 30,  83],\n",
              "       [  0,  41],\n",
              "       [107, 104],\n",
              "       [ 27,  87],\n",
              "       [  8,  81],\n",
              "       [106,  94],\n",
              "       [  0,  45],\n",
              "       [  0,  41],\n",
              "       [  0,  42],\n",
              "       [ 47,  87],\n",
              "       [ 74, 103],\n",
              "       [ 78,  91],\n",
              "       [ 10,  85],\n",
              "       [  0,  50],\n",
              "       [ 25,  78],\n",
              "       [113,  95],\n",
              "       [ 47,  88],\n",
              "       [ 15,  78],\n",
              "       [  5,  95],\n",
              "       [  0,  45]])"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "19ZAP2jvDZ19",
        "outputId": "ddaa02ec-1f26-423d-fe6c-616497decdbf"
      },
      "source": [
        "train_y"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 0, 0, 2, 2, 1, 2, 0, 2, 3, 1, 3, 0, 0, 3, 3, 0, 0, 3, 2, 2, 1,\n",
              "       3, 0, 1, 3, 2, 3, 2, 1, 3, 1, 2, 0, 1, 2, 0, 3, 2, 0, 3, 0, 2, 2,\n",
              "       2, 0, 0, 0, 3, 0, 3, 3, 0, 1, 0, 3, 3, 2, 1, 3, 0, 3, 3, 0, 2, 2,\n",
              "       3, 3, 2, 1, 1, 0, 2, 1, 1, 2, 3, 0, 2, 0, 1, 0, 1, 3, 1, 2, 3, 3,\n",
              "       1, 2, 1, 2, 1, 3, 0, 2, 1, 3, 0, 1, 3, 2, 1, 2, 1, 1, 2, 0, 1, 1,\n",
              "       0, 0, 3, 0, 2, 2, 0, 1, 3, 2, 1, 0, 0, 2, 1, 2, 0, 2, 2, 2, 2, 1,\n",
              "       3, 3, 0, 1, 0, 2, 1, 2, 3, 2, 3, 1, 0, 1, 1, 1, 0, 3, 0, 2, 2, 2,\n",
              "       1, 2, 1, 0, 1, 3, 3, 1, 0, 0, 3, 2, 3, 3, 1, 2, 1, 2, 3, 1, 2, 2,\n",
              "       3, 2, 0, 3, 3, 2, 0, 2, 3, 1, 2, 2, 1, 2, 2, 3, 1, 1, 0, 3, 1, 1,\n",
              "       2, 0, 1, 3, 0, 3, 0, 2, 2, 0, 2, 2, 0, 3, 0, 0, 0, 3, 3, 2, 2, 2,\n",
              "       2, 3, 1, 2, 2, 0, 0, 2, 2, 1, 0, 3, 3, 0, 1, 1, 1, 0, 0, 0, 3, 1,\n",
              "       2, 0, 3, 3, 3, 1], dtype=uint8)"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "saRzHfi9QAGd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "outputId": "7239d424-220d-4e6b-c9c1-6d2805498792"
      },
      "source": [
        "# fix limits of x and y axis so that we can see what is going on\n",
        "xlim=[-100,300]\n",
        "ylim=[-100,300]\n",
        "fig, ax = plotData(train_feats, train_y)\n",
        "ax.set_xlim(xlim)\n",
        "ax.set_ylim(ylim)"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(-100.0, 300.0)"
            ]
          },
          "metadata": {},
          "execution_count": 16
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qf6ZCx7ctB_k"
      },
      "source": [
        "## Elongated in the x direction, as range of values features can take is different, we generally dont like this in ml models."
      ],
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hCb4DikQP1ck"
      },
      "source": [
        "Check the baseline accuracy on the test set:"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bEs6cXR_tbRg"
      },
      "source": [
        "\n",
        "def NN1(traindata, trainlabel, query):\n",
        "  diff  = traindata - query  # find the difference between features. Numpy automatically takes care of the size here \n",
        "  sq = diff*diff # square the differences\n",
        "  dist = sq.sum(1) # add up the squares\n",
        "  label = trainlabel[np.argmin(dist)] # our predicted label is the label of the training data which has the least distance from the query\n",
        "  return label\n",
        "\n",
        "def NN(traindata, trainlabel, testdata):\n",
        "  # we will run nearest neighbour for each sample in the test data \n",
        "  # and collect the predicted classes in an array using list comprehension\n",
        "  predlabel = np.array([NN1(traindata, trainlabel, i) for i in testdata])\n",
        "  return predlabel\n",
        "\n",
        "def Accuracy(gtlabel, predlabel):\n",
        "  assert len(gtlabel)==len(predlabel), \"Length of the groundtruth labels and predicted labels should be the same\"\n",
        "  correct = (gtlabel==predlabel).sum() # count the number of times the groundtruth label is equal to the predicted label.\n",
        "  return correct/len(gtlabel)"
      ],
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rxVr6bd9PzlI",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "271160fe-a668-48a5-8cf8-083a1e5ade2c"
      },
      "source": [
        "test_pred = NN(train_feats, train_y, test_feats)\n",
        "acc = Accuracy(test_y, test_pred)\n",
        "print('Baseline accuracy = ', acc)"
      ],
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Baseline accuracy =  0.7619047619047619\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "nl8Noo8pZRek"
      },
      "source": [
        "Let us try transforming the features and checking their accuracy:"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8dUPWRsEZKwo"
      },
      "source": [
        "transform = np.array([[0.5,-0.5],[0,2.5]])\n",
        "\n",
        "train_feats_t = np.matmul(train_feats, transform)\n",
        "test_feats_t = np.matmul(test_feats, transform)  # whatever transform we are applying to the training set should be applied to the test set also"
      ],
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HgV9_M8dFO0z"
      },
      "source": [],
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iRH4VckHZaWv",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "outputId": "baee9e5d-35dd-461a-9997-db65f6724f54"
      },
      "source": [
        "fig, ax = plotData(train_feats_t, train_y)\n",
        "ax.set_xlim(xlim)\n",
        "ax.set_ylim(ylim)"
      ],
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(-100.0, 300.0)"
            ]
          },
          "metadata": {},
          "execution_count": 21
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "6j76AQrYFPm9",
        "outputId": "bb8788ab-aa72-4468-aa94-6906ee12ce35"
      },
      "source": [
        "transform = np.array([[0.5,-0.5],[0,4.5]])\n",
        "\n",
        "train_feats_t = np.matmul(train_feats, transform)\n",
        "test_feats_t = np.matmul(test_feats, transform)  # whatever transform we are applying to the training set should be applied to the test set also\n",
        "\n",
        "fig, ax = plotData(train_feats_t, train_y)\n",
        "ax.set_xlim(xlim)\n",
        "ax.set_ylim(ylim)"
      ],
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(-100.0, 300.0)"
            ]
          },
          "metadata": {},
          "execution_count": 22
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAZYAAAEKCAYAAAAxXHOuAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/NK7nSAAAACXBIWXMAAAsTAAALEwEAmpwYAAAeJElEQVR4nO3dfZBV9Z3n8feH7o6tiCAK0qHJCJFVwCBii6biWkGDDyDiQ+LipDImYYvsBDeoM6nRTY3BTFnjJOsDeTLB0lVTWR820YjBxRDFpGJGCQgi6DoSNKHbRhAFn0Do5rt/3NN4u+m+fZs+t8+9zedVdeue8zsP98vx4odzzu/+jiICMzOztAzIugAzM+tfHCxmZpYqB4uZmaXKwWJmZqlysJiZWaocLGZmlqrMgkVSraQVkp6XtF7SDUn7aEnPStog6QFJH0vaD0nmNyTLj82qdjMz61qWZywfAmdFxEnAJOA8SacD/wbcGhHHAW8Dc5L15wBvJ+23JuuZmVmZySxYIue9ZLYmeQVwFvCLpP0e4KJkelYyT7L8bEnqm2rNzKxY1Vl+uKQqYBVwHPAj4M/A9ohoSVZpBEYm0yOBTQAR0SJpB3AU8GaHfc4F5gIMHDjwlBNOOKHUf4x+bde69V0u+3Nd+3m1Hk7rniH7rVdTNYATRgzaN7/9gz00bd/J3rxRHwZIjBxyKEMOq+l1zWbWO6tWrXozIoYd6PaZBktEtAKTJA0BHgZ6nQIRsQhYBNDQ0BArV67s7S4Pai+dMK7T9gD+y3Xtvz5VqmZ38xf44O2T9rUdWlPFv17yKS46eWS7dX+1uonvPf4yr2/fyceHHMo3zz1+v3XMLBuS/tKb7TMNljYRsV3ScuDTwBBJ1clZSz3QlKzWBIwCGiVVA4OBbZkUfFAJYP8rjp2NMNcaLQwauYQj4/RuA+Oik0c6SMz6qcyCRdIwYE8SKocC08jdkF8OfB64H7gCeCTZZHEy/+/J8ifDI2iWXPXhouW9/dsFfGZ9K09PqGrX/kHrO7xw7Vl9U5yZlaUse4XVAcslrQX+BCyLiF8D/wRcI2kDuXsodybr3wkclbRfA1ybQc0HneFfuYTOzk8E/O1TznUz219mZywRsRY4uZP2jcCUTtp3AV/og9Is3ydOBx7qdNHR78AD/5rrZ/HuofC/pol1Jw/tw+LMyteePXtobGxk165dWZfSpdraWurr66mpSbfTTFncY7HyteXW27pcln/n5Yid8PUlwVvHn1PymswqQWNjI4MGDeLYY4+lHH8ZERFs27aNxsZGRo8eneq+PaSLFdTS3Fz0ujWtMPLnvythNWaVY9euXRx11FFlGSoAkjjqqKNKckblYLGCquvqul8pT0+CyKy/K9dQaVOq+hwsVtDwq69id037L9/eAuv3NIjMrP9xsFhBg2fO5Cfni61H5AJl6xHw+GTY3ck/dFRTw/Crr+rrEs2sgKVLl3L88cdz3HHHcdNNN/XJZ/rmvXVr3eShzJuwvV3bf9S38tVlwaCdufmqIUM45lv/g8EzZ/Z9gWbWqdbWVubNm8eyZcuor6/n1FNP5cILL2T8+PEl/VwHixW0ZOMS3tu9/y8kV3yqlpn/7V+YMmZGBlWZ9T+lGOZoxYoVHHfccYwZMwaA2bNn88gjj5Q8WHwpzApa+NxCWvaNCfqRw6oPY4ZDxSwVv1rdxHUPvUDT9p0E0LR9J9c99AK/Wt3U7baFNDU1MWrUqH3z9fX1NDX1bp/FcLBYQZvf39xp+zu7d/RxJWb91/cef5mde1rbte3c08r3Hn85o4p6x5fCrKARA0fQ/H6uC/Fn1rfyt08FR70D24+AHe99i8Hzbsy4QrPK9/r2nT1qL9bIkSPZtGnTvvnGxkZGjiz94K8+Y7GC5k+ez9R1rdz9vRa+sTgY9k7uSzP0HWi+/SF2PPpo1iWaVbyPDzm0R+3FOvXUU3nllVd49dVX2b17N/fffz8XXnhhr/ZZDAeLFXTG+r187dd7Oaxl/8Hzo6XwkC9mVpxvnns8h9a0Hyn80Joqvnnu8b3ab3V1NT/84Q8599xzGTduHJdddhkTJkzo1T6L+tySf4JVtC233saA6PrXuf6lvVnvtfX+KsXD76ZPn8706dN7vZ+ecLBYQd0Fh39pb5aO/vTwO18Ks4K6Cw7/0t7MOnKwWEHDr76KvVWdf02GXD7bv7Q3s/04WKygP0wYwE9n1vBObe45kkHuoV5vnCPqLh6XdXlmVoZ8j8UKWvjcQprHtbJ8XPuvSt2eFj776DdyMxMvy6AyMytXmZ2xSBolabmkFyWtlzQ/aV8gqUnSmuQ1PW+b6yRtkPSypHOzqv1g0tUv7zdXV8GenfDEd/q4IjMrd1leCmsB/iEixgOnA/MktY2MdmtETEpejwEky2YDE4DzgB9Lqupsx5aeEQNHdN7ekgw/saOxD6sxs5746le/yvDhwznxxBP79HMzC5aIaI6I55Lpd4GXgEJ97WYB90fEhxHxKrABmFL6Sg9u8yfPp6ZDftdEMP/t7bmZwfV9X5SZFeXLX/4yS5cu7fPPLYub95KOBU4Gnk2arpS0VtJdko5M2kYCm/I2a6RwEFka/voM0dp+dOOIyE3UHApnX59BUWb90NoH4dYTYcGQ3PvaB3u9yzPPPJOhQ4f2vrYeyjxYJB0O/BK4KiLeAW4HPglMApqBm3u4v7mSVkpauXXr1rTLPegs3PgwLQPa//K+ZcAAFg4dAjO/7xv3ZmlY+yA8+g3YsQmI3Puj30glXLKQabBIqiEXKj+PiIcAIuKNiGiNiL3AHXx0uasJGJW3eX3S1k5ELIqIhohoGDZsWGn/AAeBzV18QzZXVTlUzNLyxHdynWHyVXDnmCx7hQm4E3gpIm7Ja8//qffFwLpkejEwW9IhkkYDY4EVfVXvwWrE3p61m9kB6KoTTIV2jsnyjOUzwJeAszp0Lf6upBckrQWmAlcDRMR64EHgRWApMC8iWrvYt6Vk/piLqd0b7dpq9wbzx1ycUUVm/VBXnWAqtHNMZj+QjIg/sP9I7ACPFdjmRsBPlupDMz77L0DuXsvmAbkzlfljLt7XbmYpOPv63D2V/MthKXSOufzyy3nqqad48803qa+v54YbbmDOnDm9LLZ7/uW9dWvG0E8xY/XDudPywfUw9FNZl2TWv7Tdr3ziOx/9PTv7+l7fx7zvvvtSKK7nHCxWWFtvlbZ/SbX1VgHfvDdL08TL+s3fqcy7G1uZ62e9Vcys9BwsVlg/661iZqXnYLHC+llvFTMrPQeLFXb29ez/NRngoVzMrEsOFivsr88AHX8NuTdpNzPbn4PFClt1d8/azaxsbNq0ialTpzJ+/HgmTJjAwoUL++Rz3d3YCotWlgw8jIVHDmFzdRUjWlqZ//Z2Zrz/QdaVmVk3qqurufnmm5k8eTLvvvsup5xyCtOmTWP8+PHdb9wLPmOxgpYcPpAFRw+luaaakGiuqWbB0UNZcvjArEsz61eWbFzCOb84h4n3TOScX5zDko1Ler3Puro6Jk+eDMCgQYMYN24cTU37jd2bOgeLFbTwyCHsGtD+a7JrwAAWHjkkm4LM+qElG5ew4I8LaH6/mSBofr+ZBX9ckEq4tHnttddYvXo1p512Wmr77IqDxQraXNX5V6SrdjPruYXPLWRX6652bbtad7HwuXTuibz33ntceuml3HbbbRxxxBGp7LMQ/9/BCtr3bPsi282s5za/v7lH7T2xZ88eLr30Ur74xS9yySWX9Hp/xXCwWEHz395O7d723Y1r9+796Jn3ZtZrIwaO6FF7sSKCOXPmMG7cOK655ppe7asnHCxW0Iz3P2DBm29Rt6cFRVC3p4UFb76V6xVWoY9NNSs38yfPp7aqtl1bbVUt8yfP79V+n376aX72s5/x5JNPMmnSJCZNmsRjj3X5ZJLUuLuxdWvG+x903r34ie/0m9FYzbI0Y8wMIHevZfP7mxkxcATzJ8/f136gzjjjDCKi+xVT5mCxA7djU9YVmPUbM8bM6HWQlAtfCrMDp6qsKzCzMuRgsQMX7hlmZvvLLFgkjZK0XNKLktZLmp+0D5W0TNIryfuRSbskfV/SBklrJU3OqnZLDB6VdQVmVoayPGNpAf4hIsYDpwPzJI0HrgWeiIixwBPJPMD5wNjkNRe4ve9LtnY8dL6ZdSKzYImI5oh4Lpl+F3gJGAnMAu5JVrsHuCiZngXcGznPAEMk1fVt1daOe4SZWSfK4h6LpGOBk4FngWMiojlZtBk4JpkeCeR3Q2pM2jrua66klZJWbt26tXRFm5mVuV27djFlyhROOukkJkyYwLe//e0++dzMg0XS4cAvgasi4p38ZZHrgN2jTtgRsSgiGiKiYdiwYSlWamZWWQ455BCefPJJnn/+edasWcPSpUt55pnSP6Qv02CRVEMuVH4eEQ8lzW+0XeJK3rck7U1A/t3i+qTNzKzi7Xj0UV4562xeGjeeV846mx2PPtrrfUri8MMPB3Jjhu3ZswdJvd5vd7LsFSbgTuCliLglb9Fi4Ipk+grgkbz2v0t6h50O7Mi7ZGZmVrF2PPoozf98PS2vvw4RtLz+Os3/fH0q4dLa2sqkSZMYPnw406ZN6/fD5n8G+BJwlqQ1yWs6cBMwTdIrwOeSeYDHgI3ABuAO4OsZ1Gxmlrott95G7Go/bH7s2sWWW2/r9b6rqqpYs2YNjY2NrFixgnXr1vV6n93JbEiXiPgD0NU52dmdrB/AvJIWZWaWgZbmzi++dNV+IIYMGcLUqVNZunQpJ554Ymr77UzmN+/NzA521XWd/3Kiq/Zibd26le3btwOwc+dOli1bxgknnNCrfRbDwWJmlrHhV1+FatsPm6/aWoZffVWv9tvc3MzUqVOZOHEip556KtOmTeOCCy7o1T6L4dGNzcwyNnjmTCB3r6WluZnqujqGX33VvvYDNXHiRFavXp1GiT3iYDEzKwODZ87sdZCUC18KMzOzVDlYzMxKJIunN/ZEqepzsFhhXT3Myw/5MiuotraWbdu2lW24RATbtm2jtkOngTT4HosVdsqXYeWdnbebWZfq6+tpbGyknAfDra2tpb6+PvX9OlissAuS0XZW3Z17YqSqcqFywS2FtjI76NXU1DB69Oisy8iEg8W6d8EtDhIzK5rvsZiZWaocLGZmlioHi5mZpcrBYmZmqXKwmJlZqhwsZmaWKgeLmZmlysFiZmapyjRYJN0laYukdXltCyQ1SVqTvKbnLbtO0gZJL0s6N5uqzcyskKzPWO4Gzuuk/daImJS8HgOQNB6YDUxItvmx5JEQzczKTabBEhG/B94qcvVZwP0R8WFEvApsAKaUrDgzMzsgWZ+xdOVKSWuTS2VHJm0jgU156zQmbe1ImitppaSV5TyqqJlZf1WOwXI78ElgEtAM3NyTjSNiUUQ0RETDsGHDSlCemZkVUnbBEhFvRERrROwF7uCjy11NwKi8VeuTNjMzKyNlFyyS6vJmLwbaeowtBmZLOkTSaGAssKKv6zMzs8IyfR6LpPuAzwJHS2oEvg18VtIkIIDXgK8BRMR6SQ8CLwItwLyIaM2gbDMzK0Dl+jzmNDQ0NMTKlSuzLsPMrKJIWhURDQe6fdldCjMzs8rmYDEzs1Q5WMzMLFUOFjMzS5WDxczMUuVgMTOzVDlYzMwsVQ4WMzNLlYPFzMxSVXBIF0nXFFoeEbekW46ZmVW67sYKG5S8Hw+cSm4gSICZeABIMzPrRMFgiYgbACT9HpgcEe8m8wuAJSWvzszMKk6x91iOAXbnze9O2szMzNopdtj8e4EVkh5O5i8C7ilJRWZmVtGKCpaIuFHSUuCMpOkrEbG6dGWZmVml6smDvtaQewZ9NYCkT0TEX0tRlJmZVa6igkXSfyf3dMc3gFZA5J7wOLF0pZmZWSUq9oxlPnB8RGwrZTFmZlb5iu0VtgnYkfaHS7pL0hZJ6/LahkpaJumV5P3IpF2Svi9pg6S1kianXY+ZmfVescGyEXhK0nWSrml7pfD5dwPndWi7FngiIsYCTyTzAOcDY5PXXOD2FD7fzMxSVmyw/BVYBnyM3K/x2169EhG/B97q0DyLj7oy30Oua3Nb+72R8wwwRFJdb2swM7N0Fdvd+IZSF5LnmIhoTqY389EPMUeSuyTXpjFpa85rQ9Jccmc0fOITnyhtpWZmtp9ie4UtJ9cLrJ2IOCv1itrvPyTt97ndbLMIWATQ0NDQo23NzKz3iu0V9o9507XApUBL+uUA8IakuohoTi51bUnam4BReevVJ21mZlZGir0UtqpD09OSSjW68WLgCuCm5P2RvPYrJd0PnAbsyLtkZmZmZaLYS2FD82YHAKcAg3v74ZLuAz4LHC2pkdyPMG8CHpQ0B/gLcFmy+mPAdGAD8AHwld5+vpmZpa/YS2GryN1jEblLYK8Cc3r74RFxeReLzu5k3QDm9fYzzcystIq9FDa61IWYmVn/UOylsBrg74Ezk6angJ9GxJ4S1WVmZhWq2EthtwM1wI+T+S8lbf+1FEWZmVnlKjZYTo2Ik/Lmn5T0fCkKMjOzylbskC6tkj7ZNiNpDLnh883MzNop9ozlm8BySRuT+WNxd18zM+tEsWcsTwM/BfaSGzTyp8C/l6ooMzOrXMUGy73AaOBfgB8AY4CflaooMzOrXMVeCjsxIsbnzS+X9GIpCjIzs8pW7BnLc5JOb5uRdBqwsjQlmZlZJSt4xiLpBXJDudQAf5T012T+b4D/V/ryzMys0nR3KeyCPqnCzMz6jYLBEhF/6atCzMysfyj2HouZmVlRHCxmZpYqB4uZmaXKwWJmZqlysJiZWaqK/eV9n5P0GvAuuVGUWyKiQdJQ4AFyg2C+BlwWEW9nVaOZme2v3M9YpkbEpIhoSOavBZ6IiLHAE8m8mZmVkXIPlo5mAfck0/cAF2VXipmZdaacgyWA30haJWlu0nZMRDQn05uBYzpuJGmupJWSVm7durWvajUzs0TZ3mMBzoiIJknDgWWS2o1NFhEhKTpuFBGLgEUADQ0N+y03M7PSKtszlohoSt63AA8DU4A3JNUBJO9bsqvQzMw6U5bBImmgpEFt08A5wDpgMXBFstoVwCPZVGhmZl0p10thxwAPS4Jcjf87IpZK+hPwoKQ5wF+AyzKs0czMOlGWwRIRG4GTOmnfBpzd9xWZmVmxyvJSmJmZVS4Hi5mZpcrBYmZmqXKwmJlZqhwsZmaWKgeLmZmlysFiZmapcrCYmVmqHCxmZpYqB4uZmaXKwWJmZqlysJiZWaocLGZmlioHi5mZpcrBYmZmqXKwmJlZqhwsZmaWKgeLmZmlquKCRdJ5kl6WtEHStVnXY2Zm7VVUsEiqAn4EnA+MBy6XND7bqszMLF9FBQswBdgQERsjYjdwPzAr45rMzCxPpQXLSGBT3nxj0raPpLmSVkpauXXr1j4tzszMKi9YuhURiyKiISIahg0blnU5ZmYHnUoLliZgVN58fdJmZmZlotKC5U/AWEmjJX0MmA0szrgmMzPLU511AT0RES2SrgQeB6qAuyJifcZlmZlZnooKFoCIeAx4LOs6zMysc5V2KczMzMqcg8XMzFLlYDEzs1Q5WMzMLFUOFjMzS5WDxczMUuVgMTOzVDlYzMwsVQ4WMzNLlYPFzMxS5WAxM7NUOVjMzCxVDhYzM0uVg8XMzFLlYDEzs1Q5WMzMLFUOFjMzS5WDxczMUlV2wSJpgaQmSWuS1/S8ZddJ2iDpZUnnZlmnmZl1rlyfeX9rRPzP/AZJ44HZwATg48BvJf2niGjNokAzM+tc2Z2xFDALuD8iPoyIV4ENwJSMazIzsw7KNViulLRW0l2SjkzaRgKb8tZpTNrMzKyMZBIskn4raV0nr1nA7cAngUlAM3BzD/c9V9JKSSu3bt2afvFmZlZQJvdYIuJzxawn6Q7g18lsEzAqb3F90tZx34uARQANDQ3Ru0rNzKynyu5SmKS6vNmLgXXJ9GJgtqRDJI0GxgIr+ro+MzMrrBx7hX1X0iQggNeArwFExHpJDwIvAi3APPcIMzMrP2UXLBHxpQLLbgRu7MNyzMysh8ruUpiZmVU2B4uZmaXKwWJmZqlysJiZWaocLGZmlioHi5mZpcrBYmZmqXKwmJlZqhwsZmaWKgeLmZmlysFiZmapcrCYmVmqHCxmZpYqB4uZmaXKwWJmZqlysJiZWaocLGZmlioHi5mZpcrBYmZmqcokWCR9QdJ6SXslNXRYdp2kDZJelnRuXvt5SdsGSdf2fdVmZlaMrM5Y1gGXAL/Pb5Q0HpgNTADOA34sqUpSFfAj4HxgPHB5sq6ZmZWZ6iw+NCJeApDUcdEs4P6I+BB4VdIGYEqybENEbEy2uz9Z98W+qdjMzIqVSbAUMBJ4Jm++MWkD2NSh/bTOdiBpLjA3mf1Q0rq0iyyBo4E3sy6iCK4zXa4zXZVQZyXUCHB8bzYuWbBI+i0wopNF34qIR0r1uRGxCFiU1LAyIhq62SRzrjNdrjNdrjM9lVAj5OrszfYlC5aI+NwBbNYEjMqbr0/aKNBuZmZlpNy6Gy8GZks6RNJoYCywAvgTMFbSaEkfI3eDf3GGdZqZWRcyucci6WLgB8AwYImkNRFxbkSsl/QguZvyLcC8iGhNtrkSeByoAu6KiPVFfNSi0vwJUuc60+U60+U601MJNUIv61REpFWImZlZ2V0KMzOzCudgMTOzVPWbYKnEYWIkLZDUJGlN8preXc1ZyfpYFSLpNUkvJMdwZdI2VNIySa8k70dmUNddkrbk/5aqq7qU8/3k+K6VNDnDGsvueylplKTlkl5M/p7PT9rL7Xh2VWdZHVNJtZJWSHo+qfOGpH20pGeTeh5IOkuRdKh6IGl/VtKxBT8gIvrFCxhH7kc9TwENee3jgeeBQ4DRwJ/JdQCoSqbHAB9L1hnfxzUvAP6xk/ZOa87w2GZ+rLqp7zXg6A5t3wWuTaavBf4tg7rOBCYD67qrC5gO/F9AwOnAsxnWWHbfS6AOmJxMDwL+I6mn3I5nV3WW1TFNjsvhyXQN8GxynB4EZiftPwH+Ppn+OvCTZHo28ECh/febM5aIeCkiXu5k0b5hYiLiVaBtmJgpJMPERMRuoG2YmHLQVc1ZKedj1ZVZwD3J9D3ARX1dQET8HnirQ3NXdc0C7o2cZ4AhkuoyqrErmX0vI6I5Ip5Lpt8FXiI3Kke5Hc+u6uxKJsc0OS7vJbM1ySuAs4BfJO0dj2fbcf4FcLa0/5hcbfpNsBQwkv2HgxlZoL2vXZmcqt+Vd7mmXGprU271dBTAbyStUm5IH4BjIqI5md4MHJNNafvpqq5yO8Zl+71MLsOcTO5f2WV7PDvUCWV2TJUb4HcNsAVYRu5saXtEtHRSy746k+U7gKO62ndFBYuk30pa18mrbP/13E3NtwOfBCYBzcDNWdZawc6IiMnkRr+eJ+nM/IWRO38vu3715VoXZfy9lHQ48Evgqoh4J39ZOR3PTuosu2MaEa0RMYncSCZTgBPS2ne5DUJZUFTgMDHF1izpDuDXyWyhmrNQbvW0ExFNyfsWSQ+T+0vyhqS6iGhOLoFsybTIj3RVV9kc44h4o226nL6XkmrI/c/65xHxUNJcdsezszrL9ZgCRMR2ScuBT5O7ZFidnJXk19JWZ6OkamAwsK2rfVbUGcsBKtthYjpc872Y3HNqCtWclcyPVVckDZQ0qG0aOIfccVwMXJGsdgVQsoFPe6iruhYDf5f0Zjod2JF3iadPleP3MrmefyfwUkTckreorI5nV3WW2zGVNEzSkGT6UGAauftBy4HPJ6t1PJ5tx/nzwJPJGWLnSt37oK9e5P5jNQIfAm8Aj+ct+xa564cvA+fntU8n12vjz+RGXe7rmn8GvACsTf7D1XVXc4bHN9NjVaCuMeR61TwPrG+rjdz13yeAV4DfAkMzqO0+cpc99iTfzTld1UWul86PkuP7Ank9GzOosey+l8AZ5C5zrQXWJK/pZXg8u6qzrI4pMBFYndSzDrg+aR9DLtg2AP8HOCRpr03mNyTLxxTav4d0MTOzVB0Ml8LMzKwPOVjMzCxVDhYzM0uVg8XMzFLlYDEzs1Q5WMxSJulY5Y0WXMT6d0v6fPdrmlUGB4uZmaXKwWJWGlWS7kiedfEbSYdKmiTpmWQgwofVyTNiJJ0i6XfJgJqP98WIvGZpc7CYlcZY4EcRMQHYDlwK3Av8U0RMJPcr7G/nb5CMMfUD4PMRcQpwF3BjXxZtloaKGoTSrIK8GhFrkulV5Ea2HRIRv0va7iE3REa+44ETgWXJoy6qyA23YlZRHCxmpfFh3nQrMKSIbQSsj4hPl6Qisz7iS2FmfWMH8Lak/5zMfwn4XYd1XgaGSfo05C6NSZrQhzWapcJnLGZ95wrgJ5IOAzYCX8lfGBG7k27H35c0mNzfz9vIjdpsVjE8urGZmaXKl8LMzCxVDhYzM0uVg8XMzFLlYDEzs1Q5WMzMLFUOFjMzS5WDxczMUvX/AbHKbwKwWr/MAAAAAElFTkSuQmCC\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0DD4K9KitqSG"
      },
      "source": [
        "\n",
        "## observe how the plot has changed. Since the values of the transformation matrix were chosen in such a way that it brings about this elongation in y direction - ie along bound.\n",
        "## you can play with these values"
      ],
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "l9fknczfZdYF",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e41d1789-d9d5-4f3f-949f-2dd259dc25a2"
      },
      "source": [
        "test_pred = NN(train_feats_t, train_y, test_feats_t)\n",
        "acc = Accuracy(test_y, test_pred)\n",
        "print('Accuracy after transform = ', acc)"
      ],
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy after transform =  0.7857142857142857\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "OFBQlAnNZ3on"
      },
      "source": [
        "## Questions:\n",
        "1. Experiment with different transformation matrices and check the accuracy\n",
        "2. Will the same transform used for these two features also work for other features?"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Answer-1"
      ],
      "metadata": {
        "id": "IyPxA1bcoh21"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Getting the data set"
      ],
      "metadata": {
        "id": "BOrUo94wolLr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from keras.datasets import mnist\n",
        "#loading the dataset\n",
        "(train_X, train_y), (test_X, test_y) = mnist.load_data()\n",
        "train_X = train_X/255\n",
        "test_X = test_X/255\n",
        "\n",
        "nclasses = 4\n",
        "\n",
        "# get only for the first 4 classes\n",
        "train_X = train_X[train_y<nclasses]\n",
        "train_y = train_y[train_y<nclasses]\n",
        "test_X = test_X[test_y<nclasses]\n",
        "test_y = test_y[test_y<nclasses]\n",
        "\n",
        "train_X = train_X[::100].copy() # We are only taking a subset of the training set\n",
        "train_y = train_y[::100].copy() # do the same to the labels\n",
        "test_X = test_X[::100].copy() # taking a subset of the test set. This code takes every 500th sample\n",
        "test_y = test_y[::100].copy()"
      ],
      "metadata": {
        "id": "Gf-HdvKFojft"
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Function to transform the data"
      ],
      "metadata": {
        "id": "NAqyj6n_os67"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def tranformDataSet(transform, train_feats, test_feats):\n",
        "  train_feats_t = np.matmul(train_feats, transform)\n",
        "  test_feats_t = np.matmul(test_feats, transform)\n",
        "  return train_feats_t, test_feats_t"
      ],
      "metadata": {
        "id": "2wfspSeHov1C"
      },
      "execution_count": 26,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "FUNCTION TO CHECK THE ACCURACY"
      ],
      "metadata": {
        "id": "vXHaRzyHoyAC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def checkAccuracy(train_fests_t, test_feats_t, train_y, test_y):\n",
        "  test_pred = NN(train_feats_t, train_y, test_feats_t)\n",
        "  acc = Accuracy(test_y, test_pred)\n",
        "  return acc"
      ],
      "metadata": {
        "id": "Gg00jJQLoztU"
      },
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "FUNCTION TO MAKE APPLY THE TRANSFORMATION AS WELL AS GETTING THE ACCURACY"
      ],
      "metadata": {
        "id": "PIH_y93fo1sF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def getAccuracy(train_X, train_y, test_X, test_y, featurelist, transformlist):\n",
        "  listtest = []\n",
        "  listtrain = []\n",
        "  accuracyList = []\n",
        "  # for i in range(-5,6):\n",
        "  #   transformlist.append(np.array([[i, i+1], [i-1, i]]))\n",
        "  for feature in featurelist:\n",
        "    if feature == \"boundary\":\n",
        "      listtrain.append(np.array([getBoundaryPixels(i).sum() for i in train_X]))\n",
        "      listtest.append(np.array([getBoundaryPixels(i).sum() for i in test_X]))\n",
        "    if feature == \"hole\":\n",
        "      listtrain.append(np.array([getHolePixels(i).sum() for i in train_X]))\n",
        "      listtest.append(np.array([getHolePixels(i).sum() for i in test_X]))\n",
        "    if feature == \"hull\":\n",
        "      listtrain.append(np.array([getHullPixels(i).sum() for i in train_X]))\n",
        "      listtest.append(np.array([getHullPixels(i).sum() for i in test_X]))\n",
        "    if feature == \"sum\":\n",
        "      listtrain.append(np.sum(train_X, (1,2))/(28*28))\n",
        "      listtest.append(np.sum(test_X, (1,2))/(28*28))\n",
        "  train_feats = np.vstack(tuple(j for j in listtrain)).transpose()\n",
        "  test_feats = np.vstack(tuple(j for j in listtest)).transpose()\n",
        "  # train_fests_t, test_feats_t = tranformDataSet(np.array([[0.5,-0.5],[0,2.5]]), train_feats, test_feats)\n",
        "  # accuracyList.append(checkAccuracy(train_fests_t, test_feats_t, train_y, test_y))\n",
        "  for i in transformlist:\n",
        "    train_fests_t, test_feats_t = tranformDataSet(i, train_feats, test_feats)\n",
        "    accuracyList.append(checkAccuracy(train_fests_t, test_feats_t, train_y, test_y))\n",
        "  return accuracyList"
      ],
      "metadata": {
        "id": "5pX7dGfso3x9"
      },
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "NOW LET US CHECK FOR ACCURACIES OBTAINED FOR DIFFERENT VALUES OF TRANSFORMATION MATRICES"
      ],
      "metadata": {
        "id": "Pg-RH8qHo6eL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "featurelist = ['hole','boundary']\n",
        "transformlist = [np.array([[0.5,-0.5],[0,2.5]]), \n",
        "                 np.array([[0.75,-0.5], [0, 2.0]]),\n",
        "                 np.array([[1,-0.5], [0, 2.0]]),\n",
        "                 np.array([[0.5,-0.5], [0, 2.0]]),\n",
        "                 np.array([[0.5,-0.75], [0, 2.5]]),\n",
        "                 np.array([[0.5,-0.5], [0, 3.0]]),\n",
        "                 np.array([[0.5,-0.5],[0,-2.5]]),\n",
        "                 np.array([[-0.5,-0.5],[0,-2.5]]),\n",
        "                 ]\n",
        "accuracyList = getAccuracy(train_X, train_y, test_X, test_y, featurelist, transformlist)\n",
        "for i in range(len(transformlist)):\n",
        "  print(f\"matrics = {transformlist[i]} accuracy = {accuracyList[i]}\")"
      ],
      "metadata": {
        "id": "MDMmNtnjo8Qt",
        "outputId": "bdd4da3b-8605-49c0-c5b7-c51e030fd038",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "matrics = [[ 0.5 -0.5]\n",
            " [ 0.   2.5]] accuracy = 0.2857142857142857\n",
            "matrics = [[ 0.75 -0.5 ]\n",
            " [ 0.    2.  ]] accuracy = 0.2857142857142857\n",
            "matrics = [[ 1.  -0.5]\n",
            " [ 0.   2. ]] accuracy = 0.2857142857142857\n",
            "matrics = [[ 0.5 -0.5]\n",
            " [ 0.   2. ]] accuracy = 0.2857142857142857\n",
            "matrics = [[ 0.5  -0.75]\n",
            " [ 0.    2.5 ]] accuracy = 0.2857142857142857\n",
            "matrics = [[ 0.5 -0.5]\n",
            " [ 0.   3. ]] accuracy = 0.3333333333333333\n",
            "matrics = [[ 0.5 -0.5]\n",
            " [ 0.  -2.5]] accuracy = 0.2857142857142857\n",
            "matrics = [[-0.5 -0.5]\n",
            " [ 0.  -2.5]] accuracy = 0.2857142857142857\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "ANSWER-2"
      ],
      "metadata": {
        "id": "IkSds8xDpKbi"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "featurelist = [\"hull\",'sum']\n",
        "transformlist = [np.array([[0.5,-0.5],[0,2.5]]), \n",
        "                 np.array([[0.75,-0.5], [0, 2.0]]),\n",
        "                 np.array([[1,-0.5], [0, 2.0]]),\n",
        "                 np.array([[0.5,-0.5], [0, 2.0]]),\n",
        "                 np.array([[0.5,-0.75], [0, 2.5]]),\n",
        "                 np.array([[0.5,-0.5], [0, 3.0]]),\n",
        "                 np.array([[0.5,-0.5],[0,-2.5]]),\n",
        "                 np.array([[30,20],[0,-20.5]]),\n",
        "                 ]\n",
        "accuracyList = getAccuracy(train_X, train_y, test_X, test_y, featurelist, transformlist)\n",
        "for i in range(len(transformlist)):\n",
        "  print(f\"matrics = {transformlist[i]} accuracy = {accuracyList[i]}\")"
      ],
      "metadata": {
        "id": "NK0cx-3ApMyx",
        "outputId": "12f7e088-5b0a-4244-f10c-06f2b4dcad93",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "matrics = [[ 0.5 -0.5]\n",
            " [ 0.   2.5]] accuracy = 0.2857142857142857\n",
            "matrics = [[ 0.75 -0.5 ]\n",
            " [ 0.    2.  ]] accuracy = 0.2857142857142857\n",
            "matrics = [[ 1.  -0.5]\n",
            " [ 0.   2. ]] accuracy = 0.2857142857142857\n",
            "matrics = [[ 0.5 -0.5]\n",
            " [ 0.   2. ]] accuracy = 0.2857142857142857\n",
            "matrics = [[ 0.5  -0.75]\n",
            " [ 0.    2.5 ]] accuracy = 0.2857142857142857\n",
            "matrics = [[ 0.5 -0.5]\n",
            " [ 0.   3. ]] accuracy = 0.2857142857142857\n",
            "matrics = [[ 0.5 -0.5]\n",
            " [ 0.  -2.5]] accuracy = 0.2857142857142857\n",
            "matrics = [[ 30.   20. ]\n",
            " [  0.  -20.5]] accuracy = 0.23809523809523808\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "36TOA47xak20"
      },
      "source": [
        "# Data normalization\n",
        "\n",
        "Sometimes the features of our data have vastly different scales. This will cause the learning algorithm to give more importance to certain features, reducing its performance. Data normalization is a method in which we transform the features so that they have similar scales. \n",
        "\n",
        "Three commonly used feature scaling techniques are rescaling, mean normalization and z-score normalization. Here, we will talk about the simplest one: rescaling. \n",
        "\n",
        "$$\\begin{equation}\n",
        "x' = \\frac {x -min(x)} { max(x) - min(x)}\n",
        "\\end{equation}$$\n",
        "\n",
        "\n",
        "\n",
        "For more information, see [this page](https://towardsdatascience.com/data-normalization-in-machine-learning-395fdec69d02)."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ni19QKDLZzeo"
      },
      "source": [
        "def rescale(data):\n",
        "  return (data - data.min())/(data.max() - data.min())"
      ],
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8k83ZMtKeZrQ"
      },
      "source": [
        "We have to apply the rescaling to each feature individually. Also remember to apply the same transform we are using on the train set to the test set. "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1JLOPwhvehpR"
      },
      "source": [
        "train_feats_rescaled_x = rescale(train_feats[:,0])\n",
        "train_feats_rescaled_y = rescale(train_feats[:,1])\n",
        "train_feats_rescaled = np.stack((train_feats_rescaled_x, train_feats_rescaled_y),1)\n",
        "\n",
        "test_feats_rescaled_x = rescale(test_feats[:,0])\n",
        "test_feats_rescaled_y = rescale(test_feats[:,1])\n",
        "test_feats_rescaled = np.stack((test_feats_rescaled_x, test_feats_rescaled_y),1)"
      ],
      "execution_count": 32,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RaZVy9vxfKwX"
      },
      "source": [
        "Let us plot the rescaled features:"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LXyatpwZevOH",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "outputId": "43dc00ed-fb5e-42df-a500-c53a0f283173"
      },
      "source": [
        "fig, ax = plotData(train_feats_rescaled, train_y)\n"
      ],
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ZjBgxE6zglsL"
      },
      "source": [
        "This type of rescaling makes all the features between 0 and 1. \n",
        "\n",
        "Let us calculate the accuracy obtained by this transform:"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hKQnsj-KgNZc",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9716d528-0339-4116-be9f-0e748baa54de"
      },
      "source": [
        "test_pred = NN(train_feats_rescaled, train_y, test_feats_rescaled)\n",
        "acc = Accuracy(test_y, test_pred)\n",
        "print('Accuracy after transform = ', acc)"
      ],
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy after transform =  0.8095238095238095\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7qYX90Gqg-jO"
      },
      "source": [
        "All 2D linear transformations can be repreented by a transformation matrix. So what is the matrix associated with the rescaling function? Actually, we cannot represent rescaling with a matrix multiplication, because it is not a linear transform. Rescaling involves shifting the origin of the data, which is not allowed under linear transformations.\n",
        "\n",
        "We can represent rescaling as a matrix multiplication followed by a vector addition. Let our first feature vector be called X and second feature vector be called Y. Suppose we want to rescale a data point [a,b]\n",
        "\n",
        "$$ \\begin{equation}\n",
        " \\left\\{  \\begin{aligned}a' \\\\ b' \\end{aligned} \\right\\} = \n",
        " \\left\\{  \\begin{aligned} \\frac{a - min(X)}{max(X) - min(X)} \\\\ \\frac{b - min(Y)}{max(Y) - min(Y)} \\end{aligned} \\right\\} =\n",
        " \\left\\{  \\begin{aligned}&\\frac{1}{max(X)-min(X)} &0\\\\ &0 &\\frac{1}{max(Y)-min(Y)} \\end{aligned} \n",
        " \\right\\}\\left\\{  \\begin{aligned}a \\\\ b \\end{aligned} \\right\\} + \n",
        " \\left\\{  \\begin{aligned} \\frac{ -min(X)}{max(X) - min(X)} \\\\ \\frac{-min(Y)}{max(Y) - min(Y)} \\end{aligned} \\right\\}\n",
        "\\end{equation}$$\n",
        "\n",
        "You can verify this yourself if you wish, though it is not necessary. \n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "97ZaxoTZgTwR"
      },
      "source": [],
      "execution_count": 34,
      "outputs": []
    }
  ]
}